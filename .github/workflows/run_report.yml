name: Run Report (Windows)

on:
  workflow_dispatch:
    inputs:
      report:
        description: 'Jelentés típusa (1/2/3)'
        default: '3'
        required: false
      csv_url:
        description: 'MASTER CSV URL (ha üres, defaultot használ)'
        default: ''
        required: false
      diag:
        description: 'Diagnosztika (true/false) – élő árforrás ellenőrzés'
        default: 'false'
        required: false

  # Ha API-ból küldesz repository_dispatch-t (event_type: run_report)
  repository_dispatch:
    types: [run_report]

jobs:
  run:
    runs-on: windows-latest
    env:
      # Alapértelmezett MASTER CSV – nyugodtan írd át másik gid-re, ha nem az első lap kell
      DEFAULT_CSV_URL: https://docs.google.com/spreadsheets/d/e/2PACX-1vTf5h3xx4LWJvI-e7PSyc8g6uGZT-H6pCeuwEqs7NqeCDKuAltTpL_ncPOWMtooRw/pub?output=csv

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          } else {
            pip install pandas requests python-dateutil yfinance
          }

      - name: Resolve inputs (report, csv)
        id: vars
        shell: pwsh
        run: |
          $report = "${{ github.event.inputs.report }}"; if (-not $report) { $report = "${{ github.event.client_payload.report }}" }
          if (-not $report) { $report = "3" }

          $csv = "${{ github.event.inputs.csv_url }}"; if (-not $csv) { $csv = "${{ env.DEFAULT_CSV_URL }}" }

          echo "report=$report" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          echo "csv=$csv"       | Out-File -FilePath $env:GITHUB_OUTPUT -Append

          Write-Host "REPORT: $report"
          Write-Host "CSV URL: $csv"

      - name: Fetch MASTER CSV + preview
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path reports | Out-Null
          $csvUrl = "${{ steps.vars.outputs.csv }}"
          Write-Host "Letöltés: $csvUrl"
          Invoke-WebRequest -Uri $csvUrl -OutFile "reports\master.csv"
          Write-Host "Első 5 sor (preview):"
          Get-Content "reports\master.csv" -TotalCount 5 | ForEach-Object { Write-Host "CSV> $_" }

      # Opcionális diagnosztika – élő árfolyam mezők (Open, Price, PrevClose→Most, Open→Most)
      - name: Diagnosztika (yahoo v7)
        if: ${{ github.event.inputs.diag == 'true' }}
        shell: pwsh
        run: |
          $py = @"
          import requests, json, datetime
          def q(sym):
              u="https://query1.finance.yahoo.com/v7/finance/quote"
              j=requests.get(u,params={"symbols":sym},headers={"User-Agent":"Mozilla/5.0"}).json()["quoteResponse"]["result"][0]
              ts=j.get("regularMarketTime",0)
              t=datetime.datetime.utcfromtimestamp(ts).strftime("%Y-%m-%d %H:%M:%S UTC")
              open_=j.get("regularMarketOpen")
              price=j.get("regularMarketPrice")
              oc=None
              if price is not None and open_:
                  oc=(price-open_)/open_*100
              out={
                "symbol":sym,
                "marketState":j.get("marketState"),
                "regularMarketOpen":open_,
                "regularMarketPrice":price,
                "regularMarketChangePercent":j.get("regularMarketChangePercent"), # PrevClose→Now
                "openToNowPercent":oc,
                "regularMarketTime":t
              }
              print(json.dumps(out, ensure_ascii=False, indent=2))
          for s in ["META","MSTR"]:
              q(s)
          "@
          python - << 'PY'
          $py
          PY

      - name: Run report script (if present)
        shell: pwsh
        run: |
          $report = "${{ steps.vars.outputs.report }}"
          $csv    = "${{ steps.vars.outputs.csv }}"
          if (Test-Path "scripts\report_runner.py") {
            Write-Host "scripts\report_runner.py futtatása..."
            python "scripts\report_runner.py" --report $report --csv "reports\master.csv"
          } else {
            Write-Warning "scripts\report_runner.py nem található – csak CSV ellenőrzés történt."
          }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ steps.vars.outputs.report }}
          path: |
            reports/**
          if-no-files-found: warn
