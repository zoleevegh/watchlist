name: Run Report (Windows)

on:
  workflow_dispatch:
    inputs:
      report:
        description: 'Jelentés (1/2/3)'
        default: '3'
        required: false
      csv_url:
        description: 'MASTER CSV URL (üres = DEFAULT_CSV_URL)'
        default: ''
        required: false
      diag:
        description: 'Diagnosztika (true/false)'
        default: 'false'
        required: false

  # API-ból indításhoz:
  repository_dispatch:
    types: [run_report]

jobs:
  run:
    runs-on: windows-latest
    env:
      # <<< IDE TEDD A PUBLlSH-TO-WEB CSV LINKED >>>
      DEFAULT_CSV_URL: https://docs.google.com/spreadsheets/d/e/2PACX-1vTf5h3xx4LWJvI-e7PSyc8g6uGZT-H6pCeuwEqs7NqeCDKuAltTpL_ncPOWMtooRw/pub?output=csv

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests yfinance pytz tabulate

      - name: Resolve inputs (report, csv)
        id: vars
        shell: pwsh
        run: |
          $report = "${{ github.event.inputs.report }}"
          if (-not $report) { $report = "${{ github.event.client_payload.report }}" }
          if (-not $report) { $report = "3" }

          $csv = "${{ github.event.inputs.csv_url }}"
          if (-not $csv) { $csv = "${{ github.event.client_payload.csv_url }}" }
          if (-not $csv) { $csv = "${{ env.DEFAULT_CSV_URL }}" }

          "report=$report" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "csv=$csv"       | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Host "REPORT: $report"
          Write-Host "CSV URL: $csv"

      - name: Fetch MASTER CSV + preview (robust)
        shell: pwsh
        run: |
          $csvUrl = "${{ steps.vars.outputs.csv }}"
          if (-not $csvUrl) { Write-Error "Hiányzik a CSV URL."; exit 1 }
          New-Item -ItemType Directory -Force -Path reports | Out-Null
          $out = "reports\master.csv"

          Write-Host "Letöltés: $csvUrl"
          # redirect + retry + user-agent
          & curl.exe -fL --retry 3 --retry-all-errors -A "Mozilla/5.0" "$csvUrl" -o "$out"
          if ($LASTEXITCODE -ne 0) { Write-Error "CSV letöltés sikertelen (curl exit $LASTEXITCODE)."; exit 1 }

          if ((Get-Item "$out").Length -lt 10) { Write-Error "A CSV túl kicsi / üres."; exit 1 }
          $first = Get-Content "$out" -TotalCount 1
          if ($first -match "<!DOCTYPE html>|<html") { Write-Error "Nem CSV érkezett (HTML). Ellenőrizd a linket/megosztást."; exit 1 }

          Write-Host "Első 5 sor:"
          Get-Content "$out" -TotalCount 5 | ForEach-Object { Write-Host "CSV> $_" }

      - name: Run report (#3 + extrém override)
        shell: pwsh
        run: |
          $report = "${{ steps.vars.outputs.report }}"
          $csv    = "reports\master.csv"
          if (-not (Test-Path "scripts\report_runner.py")) {
            Write-Error "scripts\report_runner.py hiányzik. Másold be a repo-ba a mellékelt fájlt."
            exit 1
          }
          python "scripts\report_runner.py" --report $report --csv "$csv" --summary "$env:GITHUB_STEP_SUMMARY"

      - name: Diagnosztika (opcionális)
        if: ${{ github.event.inputs.diag == 'true' }}
        shell: pwsh
        continue-on-error: true
        run: |
          $code = @"
import yfinance as yf, pytz
from datetime import datetime
TZ = pytz.timezone('America/New_York')
def show(sym):
    t = yf.Ticker(sym)
    hist = t.history(period='1d', interval='1m', prepost=False, actions=False)
    if hist.empty:
        print(sym, 'no 1m data'); return
    if hist.index.tz is None:
        hist.index = hist.index.tz_localize('UTC').tz_convert(TZ)
    else:
        hist.index = hist.index.tz_convert(TZ)
    today = datetime.now(TZ).date()
    df = hist[hist.index.date==today]
    if df.empty:
        print(sym, 'no today bars'); return
    o = float(df.iloc[0]['Open']); l = float(df['Close'].iloc[-1])
    fi = t.fast_info if hasattr(t, 'fast_info') else None
    pc = getattr(fi, 'previous_close', None) if fi else None
    to_pct = (l-o)/o*100 if o else None
    pc_pct = (l-pc)/pc*100 if pc else None
    print(f"{sym}  Open→Now: {to_pct:.2f}%   PrevClose→Now: {pc_pct:.2f}%")
for s in ['META','CRWV','MSTR']:
    show(s)
"@
          Set-Content -Path diag.py -Encoding UTF8 -Value $code
          python diag.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: report-bundle
          path: reports/**
          if-no-files-found: warn
